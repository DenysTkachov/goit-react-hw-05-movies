{"version":3,"file":"static/js/11.d5ea236d.chunk.js","mappings":"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","sources":["hooks/useHomeOrSearch.js","components/MovieForm/MovieForm.styled.js","components/MovieForm/MovieForm.js","components/SearchedMovies/SearchedMovies.styled.js","components/SearchedMovies/SearchedMovies.js","pages/MoviesPage.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\n\nexport const useHomeOrSearch = (fetchFunction, initialQuery) => {\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        setLoading(true);\n        setError(false);\n        if (initialQuery) {\n          const clearQuery = initialQuery.split('/').pop();\n          const newData = await fetchFunction(clearQuery);\n          if (newData.length === 0) {\n            toast.error('No movie available');\n          } else {\n            setData(newData);\n          }\n          return;\n        }\n\n        const homeData = await fetchFunction(initialQuery);\n        setData(homeData);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, [fetchFunction, initialQuery]);\n\n  return { data, error, loading };\n};\n","import styled from 'styled-components';\nimport {\n  Form as StyledForm,\n  Field as StyledField,\n  ErrorMessage as StyledError,\n} from 'formik';\n\nexport const Form = styled(StyledForm)`\n  display: flex;\n  flex-direction: column; \n  align-items: center; \n  max-width: 400px;\n  margin: 0 auto;\n`;\n\nexport const FormField = styled.label`\n  margin-bottom: 15px;\n  text-align: center;\n`;\n\nexport const Field = styled(StyledField)`\n  width: 250px;\n  height: 40px;\n  padding: 10px;\n  font-size: 16px;\n  border: 1.5px solid #2ecc71;\n  border-radius: 8px;\n  outline: none;\n  transition: border-color 0.3s ease-in-out;\n\n  &:focus {\n    border-color: #e74c3c;\n  }\n`;\n\nexport const FormButton = styled.button`\n  margin-left: 10px;\n  height: 40px;\n  background-color: #3498db;\n  color: #ecf0f1;\n  padding: 10px;\n  font-size: 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: color 0.5s ease-in-out, background-color 0.5s ease-in-out;\n\n  &:hover {\n    color: #f39c12;\n    background-color: #2c3e50;\n  }\n`;\n\nexport const ErrorMessage = styled(StyledError)`\n  color: #e74c3c;\n  font-size: 14px;\n  margin-top: 5px;\n  display: block;\n  text-align: center;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  ErrorMessage,\n  Field,\n  Form,\n  FormButton,\n  FormField,\n} from './MovieForm.styled';\n\nconst MovieSchema = Yup.object().shape({\n  title: Yup.string().required('Required'),\n});\n\nexport const MovieForm = ({ submitClick }) => {\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          title: '',\n        }}\n        validationSchema={MovieSchema}\n        onSubmit={(values, actions) => {\n          actions.resetForm();\n          submitClick(values);\n        }}\n      >\n        <Form>\n          <FormField>\n            <Field name=\"title\" placeholder=\"your movie\" />\n            <ErrorMessage component={'span'} name=\"title\" />\n          </FormField>\n\n          <FormButton type=\"submit\">Search</FormButton>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const SearchedContainer = styled.div`\n  margin: 0 auto;\n  background-color: #3498db;\n  padding: 24px;\n  border-radius: 12px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  margin-top: 20px;\n  width: 450px;\n`;\n\nexport const SearchedList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin-top: 20px;\n`;\n\nexport const SearchedItem = styled.li`\n  font-size: 16px;\n  margin-bottom: 12px;\n  color: #e74c3c;\n`;\n\nexport const SearchedLink = styled(Link)`\n  text-decoration: none;\n  color: #f39c12;\n  transition: color 0.3s ease-in-out;\n\n  &:hover {\n    color: #2ecc71;\n  }\n`;\n","import { MovieForm } from \"components/MovieForm/MovieForm\";\nimport { SearchedContainer, SearchedItem, SearchedLink, SearchedList } from \"./SearchedMovies.styled\";\n\n\n\nexport const SearchedMovies = ({ onSubmit, movies, location }) => {\n  return (\n    <>\n      <SearchedContainer>\n        <MovieForm submitClick={onSubmit} />\n        <SearchedList>\n          {movies.map(movie => {\n            return (\n              <SearchedItem key={movie.id}>\n                <SearchedLink\n                  to={`/movies/${movie.id}`}\n                  state={{ from: location }}\n                >\n                  {movie.title || movie.name}\n                </SearchedLink>\n              </SearchedItem>\n            );\n          })}\n        </SearchedList>\n      </SearchedContainer>\n    </>\n  );\n};\n","\nimport { fetchSearchMovie } from 'api';\nimport { Loader } from 'components/Loader/Loader';\nimport { SearchedMovies } from 'components/SearchedMovies/SearchedMovies';\n\nimport { useHomeOrSearch } from 'hooks/useHomeOrSearch';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nexport default function MoviesPage() {\n  const location = useLocation();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryNew = searchParams.get('query') ?? '';\n  const {\n    data: movies,\n    error,\n    loading,\n  } = useHomeOrSearch(fetchSearchMovie, queryNew.trim());\n\n  const onSubmit = searchedQuery => {\n    setSearchParams({ query: `${Date.now()}/${searchedQuery.title}` });\n  };\n\n  return (\n    <>\n      {!error ? (\n        <SearchedMovies\n          onSubmit={onSubmit}\n          movies={movies}\n          location={location}\n        />\n      ) : (\n        <p style={{ color: ' #bdc3c7' }}>Try to reload page</p>\n      )}\n      {loading && <Loader />}\n    </>\n  );\n}\n"],"names":["useHomeOrSearch","fetchFunction","initialQuery","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","useEffect","_fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","clearQuery","newData","homeData","_context","prev","next","split","pop","sent","length","toast","abrupt","t0","finish","stop","apply","arguments","fetchData","Form","styled","StyledForm","_templateObject","_taggedTemplateLiteral","FormField","_templateObject2","Field","StyledField","_templateObject3","FormButton","_templateObject4","ErrorMessage","StyledError","_templateObject5","MovieSchema","Yup","shape","title","required","MovieForm","_ref","submitClick","_jsx","children","Formik","initialValues","validationSchema","onSubmit","values","actions","resetForm","_jsxs","name","placeholder","component","type","SearchedContainer","SearchedList","SearchedItem","SearchedLink","Link","SearchedMovies","movies","location","_Fragment","map","movie","to","concat","id","state","from","MoviesPage","_searchParams$get","useLocation","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","queryNew","get","_useHomeOrSearch","fetchSearchMovie","trim","style","color","searchedQuery","query","Date","now","Loader"],"sourceRoot":""}